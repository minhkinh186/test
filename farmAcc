

getgenv().config = {
	autoWorld = true,

	autoRebirth = true,
	stopAtRebirth = true,
	stopAtRebirthNum = 4,

	autoRanks = false, -- only egg and obby quest cuz im lazy lel
	stopAtRank = false,
	stopAtRankNum = 4,

	autoPetSlots = false,
	autoClaimMail = false,

	desiredPetName = "Frostbyte Husky",
	needPetNotifs = true,
	rebirthNotifs = true,
	progressNotifs = true,
	webURL = "",
}

repeat task.wait(1) until game.PlaceId ~= nil
repeat task.wait(1) until game:GetService("Players") and game:GetService("Players").LocalPlayer
repeat task.wait(1) until not game.Players.LocalPlayer.PlayerGui:FindFirstChild("__INTRO")
local HttpService = game.HttpService
local RepStor = game.ReplicatedStorage
local Library = require(RepStor.Library)
local Player = game.Players.LocalPlayer
local HRP = Player.Character.HumanoidRootPart
local Instances = workspace.__THINGS.Instances
local saveMod = require(RepStor.Library.Client.Save)
local mapMod = require(RepStor.Library.Client.MapCmds)
local mapUtil = require(RepStor.Library.Util.MapUtil)
local zoneMod = require(RepStor.Library.Client.ZoneCmds)
local zoneDir = require(RepStor.Library.Directory.Zones)
local zoneUtil = require(RepStor.Library.Util.ZonesUtil)
local rankMod = require(RepStor.Library.Client.RankCmds)
local rbMod = require(RepStor.Library.Client.RebirthCmds)
local tabsMod = require(RepStor.Library.Client.TabController)
local currencyMod = require(RepStor.Library.Client.CurrencyCmds)
local eggMod = require(game.ReplicatedStorage.Library.Client.EggCmds)
local mapFolder = game.PlaceId == 8737899170 and workspace.Map or game.PlaceId == 16498369169 and workspace.Map2
local worldName = mapFolder.Name == "Map" and "World 1" or mapFolder.Name == "Map2" and "World 2"
local worldCurrency if worldName == "World 1" then worldCurrency = "Coins" elseif worldName == "World 2" then worldCurrency = "TechCoins" end
local eggLocal = getsenv(Player.PlayerScripts.Scripts.Game["Egg Opening Frontend"])
hookfunction(eggLocal.PlayEggAnimation, function() return end)
hookfunction(require(game.ReplicatedStorage.Library.Client.PlayerPet).CalculateSpeedMultiplier, function() return 250 end)

for k,v in getconnections(Player.Idled) do
	v:Disable()
end
Player.PlayerScripts.Scripts.Core["Idle Tracking"].Enabled = false
Player.PlayerScripts.Scripts.Core["Server Closing"].Enabled = false
function getActive() return workspace.__THINGS.__INSTANCE_CONTAINER.Active:GetChildren()[1] end
function Info(name) return saveMod.Get()[name] end 
function Open(tabName) return tabsMod.OpenTab(tabName) end
function Close() return tabsMod.CloseTab() end
function teleportToZone(ZoneFolder) -- If needing to Teleport to specific zone can do teleportToZone(mapUtil.GetZone("Zone Name"))
	if ZoneFolder and ZoneFolder:FindFirstChild("INTERACT") then
		if ZoneFolder.INTERACT:FindFirstChild("BREAKABLE_SPAWNS") then
			if ZoneFolder.INTERACT.BREAKABLE_SPAWNS:FindFirstChild("Main") then
				Player.Character.HumanoidRootPart.CFrame = ZoneFolder.INTERACT.BREAKABLE_SPAWNS.Main.CFrame * CFrame.new(0, 10, 0)
			end
		end
	elseif ZoneFolder.PERSISTENT.Teleport then
		Player.Character.HumanoidRootPart.CFrame = ZoneFolder.PERSISTENT.Teleport.CFrame * CFrame.new(0, 10, 0)
		task.wait(5)
		teleportToZone(ZoneFolder)
	end
end



if Info("FirstLogin") then
	Close() task.wait(1) -- mhm fuck this game :pepelaugh:
	Library.Network.Fire("Changelog: Read") task.wait(1)
end



Close()
if getActive() and tostring(getActive()) == "StairwayToHeaven" then
	firetouchinterest(HRP, Instances["StairwayToHeaven"].Teleports.Leave, 1)
	firetouchinterest(HRP, Instances["StairwayToHeaven"].Teleports.Leave, 0)
end



local nextName, nextTable = zoneMod.GetNextZone()
local purchaseSuccess = Library.Network.Invoke("Zones_RequestPurchase", nextTable.ZoneName)

task.wait(10)
if purchaseSuccess then
	local maxName, maxTable = zoneMod.GetMaxOwnedZone()
	teleportToZone(maxTable.ZoneFolder)
end
